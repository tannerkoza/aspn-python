"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

from io import BytesIO
import struct


class type_satnav_signal_descriptor(object):
    """Satellite signal descriptor as defined in RINEX 3.05"""

    __slots__ = ["icd_type_satnav_signal_descriptor", "signal_descriptor"]

    __typenames__ = ["int8_t", "int16_t"]

    __dimensions__ = [None, None]

    SIGNAL_DESCRIPTOR_L1C = 0
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1S = 1
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1L = 2
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1X = 3
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1P = 4
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1W = 5
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1N = 6
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2C = 7
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2D = 8
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2S = 9
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2L = 10
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2X = 11
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2P = 12
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2W = 13
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2N = 14
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5I = 15
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5Q = 16
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5X = 17
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L4A = 18
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L4B = 19
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L4X = 20
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6A = 21
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6B = 22
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6X = 23
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L3I = 24
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L3Q = 25
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L3X = 26
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1B = 27
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L7I = 28
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L7Q = 29
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L7X = 30
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L8I = 31
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L8Q = 32
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L8X = 33
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6C = 34
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1Z = 35
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5D = 36
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5P = 37
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5Z = 38
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6S = 39
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6L = 40
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6E = 41
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6Z = 42
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2I = 43
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2Q = 44
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1D = 45
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L7D = 46
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L7P = 47
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L7Z = 48
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L8D = 49
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L8P = 50
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6I = 51
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6Q = 52
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6D = 53
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L6P = 54
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5A = 55
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5B = 56
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L5C = 57
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L9A = 58
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L9B = 59
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L9C = 60
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L9X = 61
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1Y = 62
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L1M = 63
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2Y = 64
    """ See RINEX 3.05 Table A23 """
    SIGNAL_DESCRIPTOR_L2M = 65
    """ See RINEX 3.05 Table A23 """

    def __init__(self):
        self.icd_type_satnav_signal_descriptor = 0
        """
        Non ASPN. Do not use. Extra field encoding the struct name to disambiguate LCM type fingerprint hashes.
        LCM Type: int8_t
        """

        self.signal_descriptor = 0
        """
        Three letter RINEX Observation Code of signal as given in Table A23 of RINEX 3.05 specification (https://files.igs.org/pub/data/format/rinex305.pdf). RINEX Observation Code must be paired with Satellite system to determine a unique identifier.
        LCM Type: int16_t
        """

    def encode(self):
        buf = BytesIO()
        buf.write(type_satnav_signal_descriptor._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(
            struct.pack(
                ">bh", self.icd_type_satnav_signal_descriptor, self.signal_descriptor
            )
        )

    @staticmethod
    def decode(data: bytes):
        if hasattr(data, "read"):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != type_satnav_signal_descriptor._get_packed_fingerprint():
            raise ValueError("Decode error")
        return type_satnav_signal_descriptor._decode_one(buf)

    @staticmethod
    def _decode_one(buf):
        self = type_satnav_signal_descriptor()
        self.icd_type_satnav_signal_descriptor, self.signal_descriptor = struct.unpack(
            ">bh", buf.read(3)
        )
        return self

    @staticmethod
    def _get_hash_recursive(parents):
        if type_satnav_signal_descriptor in parents:
            return 0
        tmphash = (0xA42B331AE7FDEA91) & 0xFFFFFFFFFFFFFFFF
        tmphash = (
            ((tmphash << 1) & 0xFFFFFFFFFFFFFFFF) + (tmphash >> 63)
        ) & 0xFFFFFFFFFFFFFFFF
        return tmphash

    _packed_fingerprint = None

    @staticmethod
    def _get_packed_fingerprint():
        if type_satnav_signal_descriptor._packed_fingerprint is None:
            type_satnav_signal_descriptor._packed_fingerprint = struct.pack(
                ">Q", type_satnav_signal_descriptor._get_hash_recursive([])
            )
        return type_satnav_signal_descriptor._packed_fingerprint

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(
            ">Q", type_satnav_signal_descriptor._get_packed_fingerprint()
        )[0]
