"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

from io import BytesIO
import struct


class type_satnav_satellite_system(object):
    """Satellite system name"""

    __slots__ = ["icd_type_satnav_satellite_system", "satellite_system"]

    __typenames__ = ["int8_t", "int8_t"]

    __dimensions__ = [None, None]

    SATELLITE_SYSTEM_SYS_GPS = 0
    """ GPS. """
    SATELLITE_SYSTEM_SYS_GALILEO = 1
    """ Galileo. """
    SATELLITE_SYSTEM_SYS_GLONASS = 2
    """ GLONASS. """
    SATELLITE_SYSTEM_SYS_BEIDOU = 3
    """ BeiDou. """
    SATELLITE_SYSTEM_SYS_SBAS = 4
    """ SBAS. """
    SATELLITE_SYSTEM_SYS_QZSS = 5
    """ QZSS. """
    SATELLITE_SYSTEM_SYS_IRNSS = 6
    """ IRNSS. """

    def __init__(self):
        self.icd_type_satnav_satellite_system = 0
        """
        Non ASPN. Do not use. Extra field encoding the struct name to disambiguate LCM type fingerprint hashes.
        LCM Type: int8_t
        """

        self.satellite_system = 0
        """
        Enumerated field which describes the Satellite System.
        LCM Type: int8_t
        """

    def encode(self):
        buf = BytesIO()
        buf.write(type_satnav_satellite_system._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(
            struct.pack(
                ">bb", self.icd_type_satnav_satellite_system, self.satellite_system
            )
        )

    @staticmethod
    def decode(data: bytes):
        if hasattr(data, "read"):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != type_satnav_satellite_system._get_packed_fingerprint():
            raise ValueError("Decode error")
        return type_satnav_satellite_system._decode_one(buf)

    @staticmethod
    def _decode_one(buf):
        self = type_satnav_satellite_system()
        self.icd_type_satnav_satellite_system, self.satellite_system = struct.unpack(
            ">bb", buf.read(2)
        )
        return self

    @staticmethod
    def _get_hash_recursive(parents):
        if type_satnav_satellite_system in parents:
            return 0
        tmphash = (0xF511E3B7E5016A02) & 0xFFFFFFFFFFFFFFFF
        tmphash = (
            ((tmphash << 1) & 0xFFFFFFFFFFFFFFFF) + (tmphash >> 63)
        ) & 0xFFFFFFFFFFFFFFFF
        return tmphash

    _packed_fingerprint = None

    @staticmethod
    def _get_packed_fingerprint():
        if type_satnav_satellite_system._packed_fingerprint is None:
            type_satnav_satellite_system._packed_fingerprint = struct.pack(
                ">Q", type_satnav_satellite_system._get_hash_recursive([])
            )
        return type_satnav_satellite_system._packed_fingerprint

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(
            ">Q", type_satnav_satellite_system._get_packed_fingerprint()
        )[0]
